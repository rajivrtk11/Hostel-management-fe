[{"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/homeView.jsx":"1","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/profileView.jsx":"2","/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/userActions.jsx":"3","/Users/apple/Downloads/Hostel-Management-master/frontend/src/reportWebVitals.js":"4","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/analysisView.jsx":"5","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/header.jsx":"6","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/Authentication Screens/RegisterView.jsx":"7","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/addStudentView.jsx":"8","/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/studentActions.jsx":"9","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/userEditView.jsx":"10","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/studentDetailsView.jsx":"11","/Users/apple/Downloads/Hostel-Management-master/frontend/src/App.js":"12","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/footer.jsx":"13","/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/attendanceReducer.jsx":"14","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/message.jsx":"15","/Users/apple/Downloads/Hostel-Management-master/frontend/src/utils.js":"16","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/formContainer.jsx":"17","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/analysisComponent.jsx":"18","/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/studentConstant.jsx":"19","/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/attendanceConstant.jsx":"20","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/attendanceTableComponent.jsx":"21","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/userListView.jsx":"22","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/loader.jsx":"23","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/student.jsx":"24","/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/attendanceActions.jsx":"25","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/Authentication Screens/LoginView.jsx":"26","/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/userReducers.jsx":"27","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/attendanceView.jsx":"28","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/paginate.jsx":"29","/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/userConstants.jsx":"30","/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/studentsReducer.jsx":"31","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/searchBox.jsx":"32","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/studentTableView.jsx":"33"},{"size":2760,"mtime":1680093187370,"results":"34","hashOfConfig":"35"},{"size":3599,"mtime":1680094325425,"results":"36","hashOfConfig":"35"},{"size":6603,"mtime":1680094232774,"results":"37","hashOfConfig":"35"},{"size":362,"mtime":1612543842000,"results":"38","hashOfConfig":"35"},{"size":3734,"mtime":1612543842000,"results":"39","hashOfConfig":"35"},{"size":2548,"mtime":1612543842000,"results":"40","hashOfConfig":"35"},{"size":3149,"mtime":1612543842000,"results":"41","hashOfConfig":"35"},{"size":7330,"mtime":1680118522252,"results":"42","hashOfConfig":"35"},{"size":5815,"mtime":1680157666641,"results":"43","hashOfConfig":"35"},{"size":3182,"mtime":1612543842000,"results":"44","hashOfConfig":"35"},{"size":5908,"mtime":1680090561522,"results":"45","hashOfConfig":"35"},{"size":2000,"mtime":1612543842000,"results":"46","hashOfConfig":"35"},{"size":280,"mtime":1612543842000,"results":"47","hashOfConfig":"35"},{"size":1789,"mtime":1612543842000,"results":"48","hashOfConfig":"35"},{"size":236,"mtime":1612543842000,"results":"49","hashOfConfig":"35"},{"size":267,"mtime":1680090521352,"results":"50","hashOfConfig":"35"},{"size":331,"mtime":1612543842000,"results":"51","hashOfConfig":"35"},{"size":2641,"mtime":1612543842000,"results":"52","hashOfConfig":"35"},{"size":1297,"mtime":1612543842000,"results":"53","hashOfConfig":"35"},{"size":859,"mtime":1612543842000,"results":"54","hashOfConfig":"35"},{"size":3361,"mtime":1612543842000,"results":"55","hashOfConfig":"35"},{"size":2730,"mtime":1612543842000,"results":"56","hashOfConfig":"35"},{"size":386,"mtime":1612543842000,"results":"57","hashOfConfig":"35"},{"size":1063,"mtime":1680090542114,"results":"58","hashOfConfig":"35"},{"size":2534,"mtime":1680093746024,"results":"59","hashOfConfig":"35"},{"size":2146,"mtime":1612543842000,"results":"60","hashOfConfig":"35"},{"size":3520,"mtime":1612543842000,"results":"61","hashOfConfig":"35"},{"size":1116,"mtime":1612543842000,"results":"62","hashOfConfig":"35"},{"size":743,"mtime":1612543842000,"results":"63","hashOfConfig":"35"},{"size":1502,"mtime":1612543842000,"results":"64","hashOfConfig":"35"},{"size":3180,"mtime":1612543842000,"results":"65","hashOfConfig":"35"},{"size":783,"mtime":1612543842000,"results":"66","hashOfConfig":"35"},{"size":2402,"mtime":1612543842000,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"trwntx",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"123"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"79"},"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/homeView.jsx",["149"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/profileView.jsx",["150"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\n\nconst ProfileView = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(\"profile\"));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, []);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={() => submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Enter password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"confirmPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      \n    </Row>\n  );\n};\n\nexport default ProfileView;\n",["151","152"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/userActions.jsx",[],["153","154"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/reportWebVitals.js",[],["155","156"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/analysisView.jsx",["157","158"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {\n  deleteAttendanceByDate,\n  getAnalysisByDate,\n} from \"../actions/attendanceActions\";\nimport AnalysisComponent from \"../components/analysisComponent\";\nimport Loading from \"../components/loader\";\nimport Message from \"../components/message\";\n\nconst AnalysisView = () => {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const [days, setDays] = useState(0);\n  const [idList, setIdList] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\n  const { attendance } = attendanceAnalysis;\n  const attendanceDelete = useSelector((state) => state.attendanceDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete,\n  } = attendanceDelete;\n  useEffect(() => {\n    if (attendance) {\n      var temp = idList;\n      Object.entries(attendance.details).map((at) => {\n        temp.push(at[0]);\n      });\n\n      setIdList(temp);\n    } else {\n      dispatch(getAnalysisByDate(startDate.toString().substring(0, 15)));\n    }\n  }, [attendance, dispatch]);\n\n  const changeDate = (date) => {\n    dispatch(getAnalysisByDate(date.toString().substring(0, 15)));\n    setStartDate(date);\n  };\n  const showModal = () => {\n    setModal(true);\n  };\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  const startDelete = () => {\n    setModal(false);\n    dispatch(deleteAttendanceByDate(days));\n  };\n\n  return (\n    <>\n      <Row className=\"flex justify-content-between\">\n        <Link to=\"/\" className=\"btn btn-light my-3\">\n          Go Back\n        </Link>\n        <div style={{ height: \"40px\", display: \"flex\" }}>\n          <Button variant=\"outline-danger\" size=\"sm\" onClick={showModal}>\n            Delete Attendance\n          </Button>\n        </div>\n      </Row>\n      {loadingDelete && <Loading />}\n      {errorDelete && <Message variant=\"success\">{errorDelete}</Message>}\n      {successDelete && <Message variant=\"success\">Attendance Deleted</Message>}\n\n      <Col>\n        <Row>\n          <Col>\n            <Row>Analysis for </Row>\n            <strong>\n              {startDate.toISOString().toString().substring(0, 10)}\n            </strong>\n          </Col>\n          <Col>\n            <DatePicker\n              selected={startDate}\n              onChange={(date) => changeDate(date)}\n            />\n          </Col>\n        </Row>\n        <Modal show={modal} animation={true} onHide={closeModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Enter Number of days before to delete</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"days\">\n                <Form.Label>Enter no of days</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Enter days\"\n                  value={days}\n                  onChange={(e) => setDays(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={closeModal}>\n              Close\n            </Button>\n            <Button variant=\"outline-danger\" onClick={startDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {<AnalysisComponent />}\n      </Col>\n    </>\n  );\n};\n\nexport default AnalysisView;\n",["159","160"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/header.jsx",[],["161","162"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/Authentication Screens/RegisterView.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/addStudentView.jsx",["163"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/studentActions.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/userEditView.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/studentDetailsView.jsx",["164","165","166"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Loading from \"../components/loader\";\nimport Message from \"../components/message\";\nimport {\n  getStudentDetails,\n  updateStudent,\n  deleteStudent,\n} from \"../actions/studentActions\";\nimport { STUDENT_UPDATE_RESET } from \"../constants/studentConstant\";\nimport { arrayBufferToBase64 } from \"../utils\";\n\nconst StudentDetailsView = ({ match, history }) => {\n  const [status, setStatus] = useState(\"\");\n  const dispatch = useDispatch();\n  const studentDetails = useSelector((state) => state.studentDetails);\n  const { loading, error, student } = studentDetails;\n  const studentUpdate = useSelector((state) => state.studentUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = studentUpdate;\n  const studentDelete = useSelector((state) => state.studentDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = studentDelete;\n\n  useEffect(() => {\n    if (successDelete) {\n      history.push(\"/\");\n    }\n    if (successUpdate) {\n      dispatch({ type: STUDENT_UPDATE_RESET });\n    }\n    if (!student || !student._id || student._id !== match.params.id) {\n      dispatch(getStudentDetails(match.params.id));\n    }\n    if (student && student._id && !status) {\n      setStatus(student.status);\n    }\n  }, [dispatch, match, successUpdate, successDelete]);\n\n  const navigateToEdit = () => {\n    history.push({\n      pathname: `/student/edit/${student._id}`,\n      state: { studentProps: student },\n    });\n  };\n  const updateStatus = () => {\n    student.status = status;\n    dispatch(updateStudent(student));\n  };\n\n  const deleteStuden = () => {\n    if (window.confirm(\"Are you sure\")) {\n      dispatch(deleteStudent(student._id));\n    }\n  };\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading || loadingUpdate || loadingDelete ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n          {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n          {student && (\n            <Row>\n              <Col md={3}>\n                {student.image.data?.data && <img width=\"211\" height=\"200\" border-radius='8%' src={`data:image/jpeg;base64,${arrayBufferToBase64(student.image.data.data)}`}></img>}\n              </Col>\n              <Col md={3}>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <h3>{student.name}</h3>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <span>Phone No:{student.contact}</span>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <span>Father Contact:{student.fatherContact}</span>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <span>City:{student.city}</span>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <span>Address:{student.address}</span>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n              <Col md={4}>\n                <Card>\n                  <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Room No:</Col>\n                        <Col> {student.roomNo}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Block No:</Col>\n                        <Col> {student.blockNo}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Status:</Col>\n                        <Col>\n                          <Form.Control\n                            size=\"sm\"\n                            as=\"select\"\n                            value={status}\n                            onChange={(e) => setStatus(e.target.value)}\n                          >\n                            {[\"Hostel\", \"Outside\", \"Home\"].map((x) => (\n                              <option key={x} value={x}>\n                                {x}\n                              </option>\n                            ))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Button\n                        className=\"btn-block\"\n                        type=\"button\"\n                        onClick={updateStatus}\n                      >\n                        Update\n                      </Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n              <Col>\n                <ListGroup variant=\"flush\">\n                  <Row>\n                    <ListGroup.Item variant=\"secondary\">\n                      <Button onClick={navigateToEdit}>\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Button variant=\"danger\" onClick={deleteStuden}>\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </ListGroup.Item>\n                  </Row>\n                </ListGroup>\n              </Col>\n            </Row>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StudentDetailsView;\n","/Users/apple/Downloads/Hostel-Management-master/frontend/src/App.js",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/footer.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/attendanceReducer.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/message.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/utils.js",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/formContainer.jsx",[],["167","168"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/analysisComponent.jsx",["169"],"import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"./loader\";\nimport Message from \"./message\";\nimport { CSVLink } from \"react-csv\";\n\nconst AnalysisComponent = () => {\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\n  const { loading, error, attendance } = attendanceAnalysis;\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  useEffect(() => {\n    if (attendance) {\n      setHeaders([\n        { label: \"Name\", key: \"name\" },\n        { label: \"Contact\", key: \"contact\" },\n        { label: \"Room No\", key: \"roomNo\" },\n        { label: \"Status\", key: \"attendance\" },\n      ]);\n      var csvMapList = [];\n      Object.entries(attendance.details).map((student) => {\n        var csvMap = {};\n        csvMap[\"name\"] = student[1].name;\n        csvMap[\"contact\"] = student[1].contact;\n        csvMap[\"roomNo\"] = student[1].roomNo;\n        csvMap[\"attendance\"] = attendance.data[student[0]];\n        csvMapList.push(csvMap);\n      });\n\n      setData(csvMapList);\n    }\n  }, [attendance]);\n  return (\n    <>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          {attendance && (\n            <>\n              <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Contact No</th>\n                    <th>Room No</th>\n                    <th>Attendance</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {attendance &&\n                    Object.entries(attendance.details).map((student) => {\n                      return (\n                        <tr key={student[0]}>\n                          <th>{student[1].name}</th>\n                          <td>{student[1].contact}</td>\n                          <td>{student[1].roomNo}</td>\n                          <td>{attendance.data[student[0]]}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </Table>\n              <CSVLink\n                data={data}\n                headers={headers}\n                filename={`attendance_${Date()\n                  .toString()\n                  .substring(0, 15)}.csv`}\n                className=\"btn btn-primary\"\n              >\n                Download\n              </CSVLink>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AnalysisComponent;\n","/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/studentConstant.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/attendanceConstant.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/attendanceTableComponent.jsx",["170"],"import React, { useEffect } from \"react\";\nimport { Table, Form, Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { postAttendance } from \"../actions/attendanceActions\";\nimport { Link } from \"react-router-dom\";\nconst AttendanceTableComponent = ({\n  students,\n  attendanceMap,\n  setAttendanceMap,\n  attendance,\n  roomNo,\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {}, [dispatch, attendanceMap]);\n  const updateAttendance = () => {\n    if (attendance) {\n      if (!attendance.roomNo.includes(roomNo)) {\n        attendance.roomNo.push(roomNo);\n      }\n    }\n    const roomData = attendance ? attendance.roomNo : roomNo;\n    const dataData = attendanceMap;\n    const detailsData = attendance ? attendance.details : {};\n    students.map((student) => {\n      detailsData[student._id] = {\n        name: student.name,\n        contact: student.contact,\n        roomNo: student.roomNo,\n      };\n    });\n\n    dispatch(\n      postAttendance({\n        roomNo: roomData,\n        details: detailsData,\n        data: dataData,\n      })\n    );\n  };\n  return (\n    <>\n      <Table striped bordered hover responsive className=\"table-sm\">\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>Attendance</th>\n            <th>STATUS</th>\n            <th>CONTACT</th>\n            <th>CITY</th>\n          </tr>\n        </thead>\n        <tbody>\n          {students &&\n            students.map((student) => (\n              <>\n                <tr key={student._id}>\n                  <td>\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\n                  </td>\n                  <td>\n                    <Form>\n                      <Form.Group controlId=\"status\">\n                        <Form.Control\n                          as=\"select\"\n                          size=\"sm\"\n                          defaultValue={attendanceMap[student._id]}\n                          onChange={(e) => {\n                            var tempMap = attendanceMap;\n                            tempMap[student._id] = e.target.value;\n                            setAttendanceMap(tempMap);\n                          }}\n                        >\n                          <option>Hostel</option>\n                          <option>Home</option>\n                          <option>outside</option>\n                        </Form.Control>\n                      </Form.Group>\n                    </Form>\n                  </td>\n                  <td>\n                    <span\n                      style={{\n                        color:\n                          student.status === \"Outside\"\n                            ? \"red\"\n                            : student.status === \"Home\"\n                            ? \"blue\"\n                            : \"black\",\n                      }}\n                    >\n                      {student.status}\n                    </span>\n                  </td>\n                  <td>\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\n                  </td>\n                  <td>{student.city}</td>\n                </tr>\n              </>\n            ))}\n        </tbody>\n      </Table>\n      <Button variant=\"success\" onClick={updateAttendance}>\n        Update Attendance\n      </Button>\n    </>\n  );\n};\n\nexport default AttendanceTableComponent;\n","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/userListView.jsx",[],["171","172"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/loader.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/student.jsx",["173","174","175"],"import React from \"react\";\nimport { Card, Col, Row, Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Buffer } from 'buffer';\nimport { arrayBufferToBase64 } from \"../utils\";\n\nconst Student = ({ stuentDetails: student }) => {\n\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Link to={`/student/${student._id}`}>\n      {student.image.data?.data && <img width=\"211\" height=\"200\" border-radius='8%' src={`data:image/jpeg;base64,${arrayBufferToBase64(student.image.data.data)}`}></img>}\n      </Link>\n      <Card.Body>\n        <Link to={`/student/${student._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{student.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Row>\n          <Col>Room No: {student.roomNo}</Col>\n        </Row>\n        <Row>\n          <Col>Stream: {student.category}</Col>\n        </Row>\n        <Card.Text>\n          Contact:\n          <a href={`tel:${student.contact}`}>{student.contact}</a>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Student;\n","/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/attendanceActions.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/Authentication Screens/LoginView.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/userReducers.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/attendanceView.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/paginate.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/userConstants.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/studentsReducer.jsx",[],["176","177"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/searchBox.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/studentTableView.jsx",["178"],"import React, { useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport Paginate from \"../components/paginate\";\nimport { listStudents } from \"../actions/studentActions\";\nimport { Link } from \"react-router-dom\";\n\nconst StudentsTableView = ({ keyword, pageNumber }) => {\n  const dispatch = useDispatch();\n\n  const studentsList = useSelector((state) => state.studentsList);\n  const { loading, error, students, page, pages } = studentsList;\n  useEffect(() => {\n    if (!students) {\n      dispatch(listStudents(keyword, pageNumber));\n    }\n  }, [dispatch, keyword, pageNumber]);\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>Stream</th>\n                <th>NAME</th>\n                <th>STATUS</th>\n                <th>CONTACT</th>\n                <th>ROOM NO</th>\n                <th>CITY</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student) => (\n                <tr key={student._id}>\n                  <td>{student.category}</td>\n                  <td>\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\n                  </td>\n                  <td>\n                    <span\n                      style={{\n                        color:\n                          student.status === \"Outside\"\n                            ? \"red\"\n                            : student.status === \"Home\"\n                            ? \"blue\"\n                            : \"black\",\n                      }}\n                    >\n                      {student.status}\n                    </span>\n                  </td>\n                  <td>\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\n                  </td>\n                  <td>{student.roomNo}</td>\n                  <td>{student.city}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StudentsTableView;\n",{"ruleId":"179","severity":1,"message":"180","line":35,"column":6,"nodeType":"181","endLine":35,"endColumn":27,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"183","line":38,"column":6,"nodeType":"181","endLine":38,"endColumn":8,"suggestions":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"185","replacedBy":"189"},{"ruleId":"187","replacedBy":"190"},{"ruleId":"185","replacedBy":"191"},{"ruleId":"187","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":32,"column":51,"nodeType":"195","messageId":"196","endLine":32,"endColumn":53},{"ruleId":"179","severity":1,"message":"197","line":40,"column":6,"nodeType":"181","endLine":40,"endColumn":28,"suggestions":"198"},{"ruleId":"185","replacedBy":"199"},{"ruleId":"187","replacedBy":"200"},{"ruleId":"185","replacedBy":"201"},{"ruleId":"187","replacedBy":"202"},{"ruleId":"179","severity":1,"message":"203","line":59,"column":6,"nodeType":"181","endLine":59,"endColumn":30,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":7,"column":3,"nodeType":"207","messageId":"208","endLine":7,"endColumn":8},{"ruleId":"179","severity":1,"message":"209","line":54,"column":6,"nodeType":"181","endLine":54,"endColumn":53,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":88,"column":46,"nodeType":"213","endLine":88,"endColumn":174},{"ruleId":"185","replacedBy":"214"},{"ruleId":"187","replacedBy":"215"},{"ruleId":"193","severity":1,"message":"194","line":22,"column":56,"nodeType":"195","messageId":"196","endLine":22,"endColumn":58},{"ruleId":"193","severity":1,"message":"194","line":24,"column":28,"nodeType":"195","messageId":"196","endLine":24,"endColumn":30},{"ruleId":"185","replacedBy":"216"},{"ruleId":"187","replacedBy":"217"},{"ruleId":"205","severity":1,"message":"206","line":2,"column":26,"nodeType":"207","messageId":"208","endLine":2,"endColumn":31},{"ruleId":"205","severity":1,"message":"218","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":12,"column":36,"nodeType":"213","endLine":12,"endColumn":164},{"ruleId":"185","replacedBy":"219"},{"ruleId":"187","replacedBy":"220"},{"ruleId":"179","severity":1,"message":"221","line":19,"column":6,"nodeType":"181","endLine":19,"endColumn":37,"suggestions":"222"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'userInfo', and 'userLoading'. Either include them or remove the dependency array.","ArrayExpression",["223"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'success', 'user', and 'userInfo'. Either include them or remove the dependency array.",["224"],"no-native-reassign",["225"],"no-negated-in-lhs",["226"],["225"],["226"],["225"],["226"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'idList' and 'startDate'. Either include them or remove the dependency array.",["227"],["225"],["226"],["225"],["226"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["228"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'history', 'status', and 'student'. Either include them or remove the dependency array.",["229"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["225"],["226"],["225"],["226"],"'Buffer' is defined but never used.",["225"],["226"],"React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["230"],{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},"Update the dependencies array to be: [dispatch, history, keyword, pageNumber, userInfo, userLoading]",{"range":"243","text":"244"},"Update the dependencies array to be: [dispatch, history, success, user, userInfo]",{"range":"245","text":"246"},"Update the dependencies array to be: [attendance, dispatch, idList, startDate]",{"range":"247","text":"248"},"Update the dependencies array to be: [successUpdate, success, history, dispatch]",{"range":"249","text":"250"},"Update the dependencies array to be: [dispatch, match, successUpdate, successDelete, student, status, history]",{"range":"251","text":"252"},"Update the dependencies array to be: [dispatch, keyword, pageNumber, students]",{"range":"253","text":"254"},[1116,1137],"[dispatch, history, keyword, pageNumber, userInfo, userLoading]",[1366,1368],"[dispatch, history, success, user, userInfo]",[1402,1424],"[attendance, dispatch, idList, startDate]",[2164,2188],"[successUpdate, success, history, dispatch]",[1543,1590],"[dispatch, match, successUpdate, successDelete, student, status, history]",[702,733],"[dispatch, keyword, pageNumber, students]"]