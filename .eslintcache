[{"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/homeView.jsx":"1","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/profileView.jsx":"2","/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/userActions.jsx":"3","/Users/apple/Downloads/Hostel-Management-master/frontend/src/reportWebVitals.js":"4","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/analysisView.jsx":"5","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/header.jsx":"6","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/Authentication Screens/RegisterView.jsx":"7","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/addStudentView.jsx":"8","/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/studentActions.jsx":"9","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/userEditView.jsx":"10","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/studentDetailsView.jsx":"11","/Users/apple/Downloads/Hostel-Management-master/frontend/src/App.js":"12","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/footer.jsx":"13","/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/attendanceReducer.jsx":"14","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/message.jsx":"15","/Users/apple/Downloads/Hostel-Management-master/frontend/src/utils.js":"16","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/formContainer.jsx":"17","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/analysisComponent.jsx":"18","/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/studentConstant.jsx":"19","/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/attendanceConstant.jsx":"20","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/attendanceTableComponent.jsx":"21","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/userListView.jsx":"22","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/loader.jsx":"23","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/student.jsx":"24","/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/attendanceActions.jsx":"25","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/Authentication Screens/LoginView.jsx":"26","/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/userReducers.jsx":"27","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/attendanceView.jsx":"28","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/paginate.jsx":"29","/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/userConstants.jsx":"30","/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/studentsReducer.jsx":"31","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/searchBox.jsx":"32","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/studentTableView.jsx":"33","/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/base.jsx":"34","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/attendanceTable.jsx":"35","/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/imageUpload.jsx":"36"},{"size":2760,"mtime":1680093187370,"results":"37","hashOfConfig":"38"},{"size":3599,"mtime":1680094325425,"results":"39","hashOfConfig":"40"},{"size":6603,"mtime":1680094232774,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1612543842000,"results":"42","hashOfConfig":"40"},{"size":3734,"mtime":1612543842000,"results":"43","hashOfConfig":"40"},{"size":2548,"mtime":1612543842000,"results":"44","hashOfConfig":"40"},{"size":3149,"mtime":1612543842000,"results":"45","hashOfConfig":"40"},{"size":8166,"mtime":1680185725165,"results":"46","hashOfConfig":"38"},{"size":5815,"mtime":1680185572010,"results":"47","hashOfConfig":"38"},{"size":3182,"mtime":1612543842000,"results":"48","hashOfConfig":"40"},{"size":5908,"mtime":1680090561522,"results":"49","hashOfConfig":"38"},{"size":2000,"mtime":1680186166217,"results":"50","hashOfConfig":"38"},{"size":280,"mtime":1612543842000,"results":"51","hashOfConfig":"40"},{"size":1789,"mtime":1612543842000,"results":"52","hashOfConfig":"40"},{"size":236,"mtime":1612543842000,"results":"53","hashOfConfig":"40"},{"size":267,"mtime":1680090521352,"results":"54","hashOfConfig":"40"},{"size":331,"mtime":1612543842000,"results":"55","hashOfConfig":"40"},{"size":2641,"mtime":1612543842000,"results":"56","hashOfConfig":"40"},{"size":1297,"mtime":1612543842000,"results":"57","hashOfConfig":"40"},{"size":859,"mtime":1612543842000,"results":"58","hashOfConfig":"40"},{"size":3361,"mtime":1612543842000,"results":"59","hashOfConfig":"40"},{"size":2730,"mtime":1612543842000,"results":"60","hashOfConfig":"38"},{"size":386,"mtime":1612543842000,"results":"61","hashOfConfig":"40"},{"size":974,"mtime":1680185975802,"results":"62","hashOfConfig":"38"},{"size":2534,"mtime":1680159187414,"results":"63","hashOfConfig":"40"},{"size":2146,"mtime":1612543842000,"results":"64","hashOfConfig":"38"},{"size":3520,"mtime":1612543842000,"results":"65","hashOfConfig":"40"},{"size":1116,"mtime":1612543842000,"results":"66","hashOfConfig":"40"},{"size":743,"mtime":1612543842000,"results":"67","hashOfConfig":"40"},{"size":1502,"mtime":1612543842000,"results":"68","hashOfConfig":"40"},{"size":3180,"mtime":1612543842000,"results":"69","hashOfConfig":"40"},{"size":783,"mtime":1612543842000,"results":"70","hashOfConfig":"40"},{"size":2402,"mtime":1612543842000,"results":"71","hashOfConfig":"40"},{"size":116,"mtime":1680165826581,"results":"72","hashOfConfig":"40"},{"size":2085,"mtime":1612543842000,"results":"73","hashOfConfig":"38"},{"size":1070,"mtime":1680183902246,"results":"74","hashOfConfig":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"btqe4l",{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},"trwntx",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/homeView.jsx",["160"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/profileView.jsx",["161"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\n\nconst ProfileView = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(\"profile\"));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, []);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={() => submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Enter password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"confirmPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      \n    </Row>\n  );\n};\n\nexport default ProfileView;\n",["162","163"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/userActions.jsx",[],["164","165"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/reportWebVitals.js",[],["166","167"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/analysisView.jsx",["168","169"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {\n  deleteAttendanceByDate,\n  getAnalysisByDate,\n} from \"../actions/attendanceActions\";\nimport AnalysisComponent from \"../components/analysisComponent\";\nimport Loading from \"../components/loader\";\nimport Message from \"../components/message\";\n\nconst AnalysisView = () => {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const [days, setDays] = useState(0);\n  const [idList, setIdList] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\n  const { attendance } = attendanceAnalysis;\n  const attendanceDelete = useSelector((state) => state.attendanceDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete,\n  } = attendanceDelete;\n  useEffect(() => {\n    if (attendance) {\n      var temp = idList;\n      Object.entries(attendance.details).map((at) => {\n        temp.push(at[0]);\n      });\n\n      setIdList(temp);\n    } else {\n      dispatch(getAnalysisByDate(startDate.toString().substring(0, 15)));\n    }\n  }, [attendance, dispatch]);\n\n  const changeDate = (date) => {\n    dispatch(getAnalysisByDate(date.toString().substring(0, 15)));\n    setStartDate(date);\n  };\n  const showModal = () => {\n    setModal(true);\n  };\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  const startDelete = () => {\n    setModal(false);\n    dispatch(deleteAttendanceByDate(days));\n  };\n\n  return (\n    <>\n      <Row className=\"flex justify-content-between\">\n        <Link to=\"/\" className=\"btn btn-light my-3\">\n          Go Back\n        </Link>\n        <div style={{ height: \"40px\", display: \"flex\" }}>\n          <Button variant=\"outline-danger\" size=\"sm\" onClick={showModal}>\n            Delete Attendance\n          </Button>\n        </div>\n      </Row>\n      {loadingDelete && <Loading />}\n      {errorDelete && <Message variant=\"success\">{errorDelete}</Message>}\n      {successDelete && <Message variant=\"success\">Attendance Deleted</Message>}\n\n      <Col>\n        <Row>\n          <Col>\n            <Row>Analysis for </Row>\n            <strong>\n              {startDate.toISOString().toString().substring(0, 10)}\n            </strong>\n          </Col>\n          <Col>\n            <DatePicker\n              selected={startDate}\n              onChange={(date) => changeDate(date)}\n            />\n          </Col>\n        </Row>\n        <Modal show={modal} animation={true} onHide={closeModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Enter Number of days before to delete</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"days\">\n                <Form.Label>Enter no of days</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Enter days\"\n                  value={days}\n                  onChange={(e) => setDays(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={closeModal}>\n              Close\n            </Button>\n            <Button variant=\"outline-danger\" onClick={startDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {<AnalysisComponent />}\n      </Col>\n    </>\n  );\n};\n\nexport default AnalysisView;\n",["170","171"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/header.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/Authentication Screens/RegisterView.jsx",[],["172","173"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/addStudentView.jsx",["174"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport FormContainer from \"../components/formContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addStudent, updateStudent } from \"../actions/studentActions\";\nimport Loading from \"../components/loader.jsx\";\nimport Message from \"../components/message.jsx\";\nimport { STUDENT_UPDATE_RESET } from \"../constants/studentConstant\";\nimport Loader from \"../components/loader\";\n\nconst AddStudentView = () => {\n  const history = useHistory();\n  const [isEdit, setIsEdit] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [fatherContact, setFatherContact] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [roomNo, setRoomNo] = useState(\"\");\n  const [blockNo, setBlockNo] = useState(\"\");\n  const [status, setStatus] = useState(\"Hostel\");\n\n  const dispatch = useDispatch();\n  const studentAdd = useSelector((state) => state.studentAdd);\n  const { loading, error, success } = studentAdd;\n  const studentUpdate = useSelector((state) => state.studentUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = studentUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: STUDENT_UPDATE_RESET, payload: {success: false} });\n      \n      history.push(\"/\");\n    }\n    if (history.location.state && history.location.state.studentProps) {\n      setIsEdit(true);\n      const student = history.location.state.studentProps;\n      setName(student.name);\n      setAddress(student.address);\n      setCategory(student.category);\n      setCity(student.city);\n      setContact(student.contact);\n      setFatherContact(student.fatherContact);\n      setImage(student.image);\n      setRoomNo(student.roomNo);\n      setBlockNo(student.blockNo);\n      setStatus(student.status);\n    }\n    if (success) {\n      history.push(\"/\");\n    }\n  }, [successUpdate, success]);\n\n  const uploadFile = async () => {\n    debugger\n    console.log('inside upload file', image)\n    const formData = new FormData();\n    formData.append('file', image);\n    formData.append('cloud_name', 'deopxwaiz');\n    formData.append('upload_preset', \"demo-image\");\n\n    fetch('https://api.cloudinary.com/v1_1/deopxwaiz/image/upload', {\n        method: 'POST',\n        body: formData,\n    }).then(response => response.json())\n    .then((data) => {\n        console.log('the data is', data)\n        if (data.secure_url !== '') {\n            const uploadedFileUrl = data.secure_url;\n            submitHandler(uploadedFileUrl)\n            localStorage.setItem('passportUrl', uploadedFileUrl);\n        }\n    })\n    .catch(err => console.error(err));\n  }\n\n  const submitHandler = async(uploadedFileUrl=\"\") => {\n    console.log('the upload file is', uploadedFileUrl)\n    if (isEdit === true) {\n      const _id = history.location.state.studentProps._id;\n      dispatch(\n        updateStudent({\n          _id,\n          name,\n          address,\n          category,\n          city,\n          contact,\n          fatherContact,\n          image,\n          roomNo,\n          blockNo,\n          status,\n        })\n      );\n    } else {\n      dispatch(\n        addStudent({\n          name,\n          address,\n          category,\n          city,\n          contact,\n          fatherContact,\n          image: uploadedFileUrl,\n          roomNo,\n          blockNo,\n          status,\n        })\n      );\n    }\n  };\nconsole.log('the image is ', image)\n  return (\n    <>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n\n      {loading || loadingUpdate ? (\n        <Loader />\n      ) : (\n        <>\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n          <FormContainer>\n            <h1 onClick={uploadFile}>{isEdit ? \"Edit Student\" : \"Add Student\"}</h1>\n            {loading && <Loading />}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            <Form onSubmit={uploadFile}></Form>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"status\">\n              <Form.Label>Status</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={status}\n                onChange={(e) => setStatus(e.target.value)}\n              >\n                {[\"Hostel\", \"Outside\", \"Home\"].map((x) => (\n                  <option key={x + 1} value={x + 1}>\n                    {x}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"address\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter address\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"city\">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter city\"\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"contact\">\n              <Form.Label>Contact</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter phone number\"\n                value={contact}\n                onChange={(e) => setContact(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"fatherContact\">\n              <Form.Label>Father Contact</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Father Phone Number\"\n                value={fatherContact}\n                onChange={(e) => setFatherContact(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"roomNo\">\n              <Form.Label>Room No</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Room no\"\n                value={roomNo}\n                onChange={(e) => setRoomNo(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"b\">\n              <Form.Label>Block Number</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Block Number\"\n                value={blockNo}\n                onChange={(e) => setBlockNo(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image Url</Form.Label>\n              <input\n                type=\"file\"\n                name=\"file\"\n                placeholder=\"Select image to upload\"\n                onChange={(e) => {\n                  console.log('the file is', e.target.files[0])\n                  setImage(e.target.files[0])\n                }}\n              ></input>\n            </Form.Group>\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Stream\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\" onClick={uploadFile}>\n              {isEdit ? \"Update\" : \"Add Student\"}\n            </Button>\n          </FormContainer>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AddStudentView;\n","/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/studentActions.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/userEditView.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/studentDetailsView.jsx",["175","176","177"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/App.js",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/footer.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/attendanceReducer.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/message.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/utils.js",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/formContainer.jsx",[],["178","179"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/analysisComponent.jsx",["180"],"import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"./loader\";\nimport Message from \"./message\";\nimport { CSVLink } from \"react-csv\";\n\nconst AnalysisComponent = () => {\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\n  const { loading, error, attendance } = attendanceAnalysis;\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  useEffect(() => {\n    if (attendance) {\n      setHeaders([\n        { label: \"Name\", key: \"name\" },\n        { label: \"Contact\", key: \"contact\" },\n        { label: \"Room No\", key: \"roomNo\" },\n        { label: \"Status\", key: \"attendance\" },\n      ]);\n      var csvMapList = [];\n      Object.entries(attendance.details).map((student) => {\n        var csvMap = {};\n        csvMap[\"name\"] = student[1].name;\n        csvMap[\"contact\"] = student[1].contact;\n        csvMap[\"roomNo\"] = student[1].roomNo;\n        csvMap[\"attendance\"] = attendance.data[student[0]];\n        csvMapList.push(csvMap);\n      });\n\n      setData(csvMapList);\n    }\n  }, [attendance]);\n  return (\n    <>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          {attendance && (\n            <>\n              <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Contact No</th>\n                    <th>Room No</th>\n                    <th>Attendance</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {attendance &&\n                    Object.entries(attendance.details).map((student) => {\n                      return (\n                        <tr key={student[0]}>\n                          <th>{student[1].name}</th>\n                          <td>{student[1].contact}</td>\n                          <td>{student[1].roomNo}</td>\n                          <td>{attendance.data[student[0]]}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </Table>\n              <CSVLink\n                data={data}\n                headers={headers}\n                filename={`attendance_${Date()\n                  .toString()\n                  .substring(0, 15)}.csv`}\n                className=\"btn btn-primary\"\n              >\n                Download\n              </CSVLink>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AnalysisComponent;\n",["181","182"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/studentConstant.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/attendanceConstant.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/attendanceTableComponent.jsx",["183"],"import React, { useEffect } from \"react\";\nimport { Table, Form, Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { postAttendance } from \"../actions/attendanceActions\";\nimport { Link } from \"react-router-dom\";\nconst AttendanceTableComponent = ({\n  students,\n  attendanceMap,\n  setAttendanceMap,\n  attendance,\n  roomNo,\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {}, [dispatch, attendanceMap]);\n  const updateAttendance = () => {\n    if (attendance) {\n      if (!attendance.roomNo.includes(roomNo)) {\n        attendance.roomNo.push(roomNo);\n      }\n    }\n    const roomData = attendance ? attendance.roomNo : roomNo;\n    const dataData = attendanceMap;\n    const detailsData = attendance ? attendance.details : {};\n    students.map((student) => {\n      detailsData[student._id] = {\n        name: student.name,\n        contact: student.contact,\n        roomNo: student.roomNo,\n      };\n    });\n\n    dispatch(\n      postAttendance({\n        roomNo: roomData,\n        details: detailsData,\n        data: dataData,\n      })\n    );\n  };\n  return (\n    <>\n      <Table striped bordered hover responsive className=\"table-sm\">\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>Attendance</th>\n            <th>STATUS</th>\n            <th>CONTACT</th>\n            <th>CITY</th>\n          </tr>\n        </thead>\n        <tbody>\n          {students &&\n            students.map((student) => (\n              <>\n                <tr key={student._id}>\n                  <td>\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\n                  </td>\n                  <td>\n                    <Form>\n                      <Form.Group controlId=\"status\">\n                        <Form.Control\n                          as=\"select\"\n                          size=\"sm\"\n                          defaultValue={attendanceMap[student._id]}\n                          onChange={(e) => {\n                            var tempMap = attendanceMap;\n                            tempMap[student._id] = e.target.value;\n                            setAttendanceMap(tempMap);\n                          }}\n                        >\n                          <option>Hostel</option>\n                          <option>Home</option>\n                          <option>outside</option>\n                        </Form.Control>\n                      </Form.Group>\n                    </Form>\n                  </td>\n                  <td>\n                    <span\n                      style={{\n                        color:\n                          student.status === \"Outside\"\n                            ? \"red\"\n                            : student.status === \"Home\"\n                            ? \"blue\"\n                            : \"black\",\n                      }}\n                    >\n                      {student.status}\n                    </span>\n                  </td>\n                  <td>\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\n                  </td>\n                  <td>{student.city}</td>\n                </tr>\n              </>\n            ))}\n        </tbody>\n      </Table>\n      <Button variant=\"success\" onClick={updateAttendance}>\n        Update Attendance\n      </Button>\n    </>\n  );\n};\n\nexport default AttendanceTableComponent;\n","/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/userListView.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/loader.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/student.jsx",["184","185","186","187"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/actions/attendanceActions.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/Authentication Screens/LoginView.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/userReducers.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/attendanceView.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/paginate.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/userConstants.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/reducers/studentsReducer.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/searchBox.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/screens/studentTableView.jsx",["188"],"import React, { useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport Paginate from \"../components/paginate\";\nimport { listStudents } from \"../actions/studentActions\";\nimport { Link } from \"react-router-dom\";\n\nconst StudentsTableView = ({ keyword, pageNumber }) => {\n  const dispatch = useDispatch();\n\n  const studentsList = useSelector((state) => state.studentsList);\n  const { loading, error, students, page, pages } = studentsList;\n  useEffect(() => {\n    if (!students) {\n      dispatch(listStudents(keyword, pageNumber));\n    }\n  }, [dispatch, keyword, pageNumber]);\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>Stream</th>\n                <th>NAME</th>\n                <th>STATUS</th>\n                <th>CONTACT</th>\n                <th>ROOM NO</th>\n                <th>CITY</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student) => (\n                <tr key={student._id}>\n                  <td>{student.category}</td>\n                  <td>\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\n                  </td>\n                  <td>\n                    <span\n                      style={{\n                        color:\n                          student.status === \"Outside\"\n                            ? \"red\"\n                            : student.status === \"Home\"\n                            ? \"blue\"\n                            : \"black\",\n                      }}\n                    >\n                      {student.status}\n                    </span>\n                  </td>\n                  <td>\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\n                  </td>\n                  <td>{student.roomNo}</td>\n                  <td>{student.city}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StudentsTableView;\n","/Users/apple/Downloads/Hostel-Management-master/frontend/src/constants/base.jsx",[],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/attendanceTable.jsx",["189","190","191"],"/Users/apple/Downloads/Hostel-Management-master/frontend/src/components/imageUpload.jsx",[],{"ruleId":"192","severity":1,"message":"193","line":35,"column":6,"nodeType":"194","endLine":35,"endColumn":27,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"196","line":38,"column":6,"nodeType":"194","endLine":38,"endColumn":8,"suggestions":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"198","replacedBy":"202"},{"ruleId":"200","replacedBy":"203"},{"ruleId":"198","replacedBy":"204"},{"ruleId":"200","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":32,"column":51,"nodeType":"208","messageId":"209","endLine":32,"endColumn":53},{"ruleId":"192","severity":1,"message":"210","line":40,"column":6,"nodeType":"194","endLine":40,"endColumn":28,"suggestions":"211"},{"ruleId":"198","replacedBy":"212"},{"ruleId":"200","replacedBy":"213"},{"ruleId":"198","replacedBy":"214"},{"ruleId":"200","replacedBy":"215"},{"ruleId":"192","severity":1,"message":"216","line":59,"column":6,"nodeType":"194","endLine":59,"endColumn":30,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":7,"column":3,"nodeType":"220","messageId":"221","endLine":7,"endColumn":8},{"ruleId":"192","severity":1,"message":"222","line":54,"column":6,"nodeType":"194","endLine":54,"endColumn":53,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":88,"column":46,"nodeType":"226","endLine":88,"endColumn":174},{"ruleId":"198","replacedBy":"227"},{"ruleId":"200","replacedBy":"228"},{"ruleId":"206","severity":1,"message":"207","line":22,"column":56,"nodeType":"208","messageId":"209","endLine":22,"endColumn":58},{"ruleId":"198","replacedBy":"229"},{"ruleId":"200","replacedBy":"230"},{"ruleId":"206","severity":1,"message":"207","line":24,"column":28,"nodeType":"208","messageId":"209","endLine":24,"endColumn":30},{"ruleId":"218","severity":1,"message":"219","line":2,"column":26,"nodeType":"220","messageId":"221","endLine":2,"endColumn":31},{"ruleId":"218","severity":1,"message":"231","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":16},{"ruleId":"218","severity":1,"message":"232","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":29},{"ruleId":"224","severity":1,"message":"225","line":12,"column":6,"nodeType":"226","endLine":12,"endColumn":76},{"ruleId":"192","severity":1,"message":"233","line":19,"column":6,"nodeType":"194","endLine":19,"endColumn":37,"suggestions":"234"},{"ruleId":"192","severity":1,"message":"235","line":22,"column":6,"nodeType":"194","endLine":22,"endColumn":53,"suggestions":"236"},{"ruleId":"206","severity":1,"message":"207","line":27,"column":30,"nodeType":"208","messageId":"209","endLine":27,"endColumn":32},{"ruleId":"206","severity":1,"message":"207","line":36,"column":30,"nodeType":"208","messageId":"209","endLine":36,"endColumn":32},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'userInfo', and 'userLoading'. Either include them or remove the dependency array.","ArrayExpression",["237"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'success', 'user', and 'userInfo'. Either include them or remove the dependency array.",["238"],"no-native-reassign",["239"],"no-negated-in-lhs",["240"],["239"],["240"],["239"],["240"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'idList' and 'startDate'. Either include them or remove the dependency array.",["241"],["239"],["240"],["239"],["240"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["242"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'history', 'status', and 'student'. Either include them or remove the dependency array.",["243"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["239"],["240"],["239"],["240"],"'Buffer' is defined but never used.","'arrayBufferToBase64' is defined but never used.","React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["244"],"React Hook useEffect has a missing dependency: 'arrangeTable'. Either include it or remove the dependency array.",["245"],{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [dispatch, history, keyword, pageNumber, userInfo, userLoading]",{"range":"260","text":"261"},"Update the dependencies array to be: [dispatch, history, success, user, userInfo]",{"range":"262","text":"263"},"Update the dependencies array to be: [attendance, dispatch, idList, startDate]",{"range":"264","text":"265"},"Update the dependencies array to be: [successUpdate, success, history, dispatch]",{"range":"266","text":"267"},"Update the dependencies array to be: [dispatch, match, successUpdate, successDelete, student, status, history]",{"range":"268","text":"269"},"Update the dependencies array to be: [dispatch, keyword, pageNumber, students]",{"range":"270","text":"271"},"Update the dependencies array to be: [dispatch, attendance, attendanceMap, students, arrangeTable]",{"range":"272","text":"273"},[1116,1137],"[dispatch, history, keyword, pageNumber, userInfo, userLoading]",[1366,1368],"[dispatch, history, success, user, userInfo]",[1402,1424],"[attendance, dispatch, idList, startDate]",[2164,2188],"[successUpdate, success, history, dispatch]",[1543,1590],"[dispatch, match, successUpdate, successDelete, student, status, history]",[702,733],"[dispatch, keyword, pageNumber, students]",[780,827],"[dispatch, attendance, attendanceMap, students, arrangeTable]"]